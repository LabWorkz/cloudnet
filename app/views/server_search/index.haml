%script
  = raw "models.packagesData = #{packages}"

%section.container.split-cont{:"ng-controller" => "ServerSearchCtrl as ctrl"}
  .pure-g
    .pure-u-1-4
      %section.filters{data: {mem: params[:mem], cpu: params[:cpu], disk: params[:disc]}}
        = render 'filters'
    .pure-u-3-4.map-search
      %section.results
        .filters
          %span.font-11 Sort these clouds by what's important to you:
          .btn-group{:"data-toggle" => "buttons", role: "group", 
                     :"aria-label" => "sorting"}
            %label.btn.btn-default{:"ng-click" => "ctrl.state.sortBy = {field: 'cloudIndex', rev: true}"} 
              %input{type:"radio", name:"sort", id:"sort_index", autocomplete:"off"} Cloud Index
            %label.btn.btn-default{:"ng-click" => "ctrl.state.sortBy = {field: 'uptime', rev: true}"} 
              %input{type:"radio", name:"sort", id:"sort_index", autocomplete:"off"} Uptime
            %label.btn.btn-default.active{:"ng-click" => "ctrl.state.sortBy = {field: 'price', rev: false}"}
              %input{type:"radio", name:"sort", id:"sort_price", autocomplete:"off"} Price  
          .map-controls.pull-right
            %button.btn.btn-default.btn-sm.show-map{"ng-click" => "ctrl.showMap()"} show
            %button.btn.btn-default.btn-sm.hide-map{"ng-click" => "ctrl.hideMap()"} hide
            
        %map-widget{:"ng-model" => "ctrl.state.filteredLocationsArray", "ng-show" => "ctrl.mapVisible"}
          
        .locations-container{"ng-class" => "{'results-with-map': ctrl.mapVisible}"}
          .location{:"ng-repeat" => "l in ctrl.state.filteredLocationsArray"}
            %location-widget{location: "l", data: {id: "{{l.id}}"}}
            
          .vps-not-valid{:"ng-show" => "ctrl.showVpsLocations()"}
            %hr
            %h3 For VPS hosting choose one of the predefined packages
            .location{:"ng-repeat" => "l in ctrl.state.locations | filter:{budgetVps: true} | filter:ctrl.state.cloudIndexUptimeFilter | orderBy:ctrl.state.locationSort():ctrl.state.sortBy.rev"}
              %location-widget{:"location" => "l"}
:javascript
  var mapboxKey = "#{KEYS[:mapbox][:token]}";
  var mapboxPublicToken = "#{KEYS[:mapbox][:public_token]}";
  var inactive_pin = "#{asset_path('pins/inactive-pin.png')}";
  var fiveHundredPxKey = "#{KEYS[:five_hundred_px][:api_key]}";
  
%script{type: "text/ng-template", id: "mapPopup.html"}
  =render 'map_popup'